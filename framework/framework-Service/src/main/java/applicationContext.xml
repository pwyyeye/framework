<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="    
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	
    
   <!-- <context:component-scan base-package="com.xxl.springsecurity" /> -->  
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties" />  
    </bean>
    
    <!-- 
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
        <property name="driverClassName" value="${driver}" />  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />
    </bean>
     -->
    
    <bean id="dataSource" class="common.security.DruidDataSourceEx"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="testOnReturn" value="${jdbc.testOnReturn}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="filters" value="${jdbc.filters}" />
		<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.maxPoolPreparedStatementPerConnectionSize}" />
	</bean>

    <!-- 配置Hibernate -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
       <!-- <property name="packagesToScan" >
            <list>
                <value>com.xxl.baseService.bo</value>
            </list>
        </property>--> 
        <!-- --><property name="mappingDirectoryLocations">  
            <list>  
                <value>classpath:/com/xxl/baseService/bo/</value>
                <value>classpath:/com/xxl/os/bo/</value>    
            </list>  
        </property>
       <!-- <property name="mappingResources">
			<list>
				<value>com/xxl/baseService/bo/ItModule.hbm.xml</value>
				<value>com/xxl/baseService/bo/Favorite.hbm.xml</value>
				<value>com/xxl/baseService/bo/MessageEvent.hbm.xml</value>
				<value>com/xxl/baseService/bo/MessageSubscibe.hbm.xml</value>
				<value>com/xxl/baseService/bo/Role.hbm.xml</value>
				<value>com/xxl/baseService/bo/Menu.hbm.xml</value>
				<value>com/xxl/baseService/bo/MenuRole.hbm.xml</value>
				<value>com/xxl/baseService/bo/UABinding.hbm.xml</value>
				<value>com/xxl/baseService/bo/UserLogin.hbm.xml</value>
				<value>com/xxl/baseService/bo/ReportModule.hbm.xml</value>
				<value>com/xxl/baseService/bo/Notice.hbm.xml</value>
    			<value>com/xxl/baseService/bo/RaBinding.hbm.xml</value>
				<value>com/xxl/baseService/bo/SystemProperties.hbm.xml</value>
				<value>com/xxl/baseService/bo/UserProperties.hbm.xml</value>
				
				<value>com/xxl/baseService/bo/ReportSchedule.hbm.xml</value> 

			</list>
		</property> -->
        <property name="hibernateProperties">
            <props>
                <prop key="dialect">${hibernate.dialect}</prop>
                <prop key="current_session_context_class">${hibernate.current_session_context_class}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <!--<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->
            </props>
        </property>
    </bean>
    
    <!-- 定义事务管理 -->
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <!-- 引入tx 命名空间,启用事务注解  -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- 配置事务通知属性 -->  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <!-- 定义事务传播属性 -->  
        <tx:attributes>  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="edit*" propagation="REQUIRED" />  
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="add*" propagation="REQUIRED" />  
            <tx:method name="new*" propagation="REQUIRED" />  
            <tx:method name="set*" propagation="REQUIRED" />  
            <tx:method name="remove*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />  
            <tx:method name="change*" propagation="REQUIRED" />  
            <tx:method name="pause*" propagation="REQUIRED" />  
            <tx:method name="resume*" propagation="REQUIRED" />  
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="getSessionUserBean" propagation="REQUIRED"/> 
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="load*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="*" propagation="REQUIRED" read-only="true" />
        </tx:attributes>  
    </tx:advice>  
    
    <!-- 配置事务切面 -->  
    <aop:config>  
        <aop:pointcut id="serviceOperation"  
            expression="execution(* com.xxl.baseService.service..*.*(..))" />  
        <aop:pointcut id="serviceOperation_os"  
            expression="execution(* com.xxl.os.service..*.*(..))" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation_os" />  
    </aop:config>  
    
    <!-- quartz配置  动态配置所以我们将 Factory 作为一个service一样的接口 QuartzJobFactory.java-->
    <!-- 调度工厂 -->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    </bean>
    
    <import resource="ActiveMQ.xml" />
    
     <!-- 自动扫描 -->  
    <context:component-scan base-package="common.dao" />
	<context:component-scan base-package="com.xxl.baseService.dao" />
    <context:component-scan base-package="com.xxl.baseService.service" />  
    <context:component-scan base-package="com.xxl.os" />  
    <context:component-scan base-package="com.xxl.report.service" />  
    <context:component-scan base-package="com.xxl.task" />
    <context:component-scan base-package="com.xxl.jms" />
	<context:component-scan base-package="common.utils" />
    <context:component-scan base-package="common.filter" />
    <context:component-scan base-package="common.bussiness" />
    
    
    <import resource="dubbo-provider.xml" />
</beans>